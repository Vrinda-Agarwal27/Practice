Reverse both lists add them like 2.Add two numbers then reverse the final list

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverse(ListNode head)
    {
        ListNode p=null,q=head,r=head.next;
        while(q!=null)
        {
            q.next=p;
            p=q;
            q=r;
            if(r!=null)
                r=r.next;
        }
        return p;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        l1=reverse(l1);
        l2=reverse(l2);
        ListNode sum=null;
        ListNode p=null,p1=l1,p2=l2;
        int carry=0;
        while(p1!=null || p2!=null)
        {
            if(p1!=null)
            {
                carry+=p1.val;
                p1=p1.next;
            }
            if(p2!=null)
            {
                carry+=p2.val;
                p2=p2.next;
            }
            ListNode t=new ListNode(carry%10);
            if(sum==null)
            {
                sum=t;
                p=sum;
            }
            else
            {
                p.next=t;
                p=p.next;
            }
            carry/=10;
        }
        if(carry!=0)
        {
            ListNode t=new ListNode(carry%10);
                p.next=t;
                p=p.next;
        }
        sum=reverse(sum);
        return sum;
    }
}
