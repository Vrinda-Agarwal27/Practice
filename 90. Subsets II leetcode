class Solution {
    public void Helper(int nums[],List<List<Integer>> ans,List<Integer> l,int idx)
    {
        ans.add(new ArrayList<>(l)); //case of empty subset handled automatically
        if(idx==nums.length)
            return;
        for(int i=idx;i<nums.length;i++)
        {
            if(i>idx && nums[i]==nums[i-1])
                continue;
            l.add(nums[i]);
            //ans.add(new ArrayList<>(l)); // an empty subset needs to be added beforehand
            Helper(nums,ans,l,i+1);
            l.remove(l.size()-1);
        }
    }
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> ans=new ArrayList<>();
        //ans.add(new ArrayList<>()); //adding empty subset
        Arrays.sort(nums);
        Helper(nums,ans,new ArrayList<>(),0);
        return ans;
    }
}
