check all 8 neighbours if ==1, increment count and apply conditions on count

#1
class Solution {
    public void gameOfLife(int[][] board) {
        int nboard[][]=new int[board.length][board[0].length];
        for(int i=0;i<board.length;i++)
        {
            int count=0;
            for(int j=0;j<board[i].length;j++)
            {
                count=0;//necessary step!
                if(i>0)
                {
                    if(board[i-1][j]==1)
                        count++;
                    if(j>0)
                        if(board[i-1][j-1]==1)
                            count++;
                    if(j<board[i].length-1)
                        if(board[i-1][j+1]==1)
                            count++;
                }
                if(i<board.length-1)
                {
                    if(board[i+1][j]==1)
                        count++;
                    if(j>0)
                        if(board[i+1][j-1]==1)
                            count++;
                    if(j<board[i].length-1)
                        if(board[i+1][j+1]==1)
                            count++;
                }
                if(j>0)
                    if(board[i][j-1]==1)
                        count++;
                if(j<board[i].length-1)
                    if(board[i][j+1]==1)
                        count++;


                if(board[i][j]==1)
                {
                    if(count<2||count>3)
                        nboard[i][j]=0;
                    else
                        nboard[i][j]=1;
                }
                else
                {
                    if(count==3)
                        nboard[i][j]=1;
                    else
                        nboard[i][j]=0;
                }
            }
        }
        for(int i=0;i<board.length;i++)
        {
            for(int j=0;j<board[i].length;j++)
                board[i][j]=nboard[i][j];
        }
    }
}

#2 ways to count neighbours(chatgpt)

public int countLiveNeighbors(int[][] board, int row, int col) {
        int rows = board.length;
        int cols = board[0].length;
        int count = 0;

        // Define the directions for the eight neighbors
        int[] directions = {-1, 0, 1};

        for (int i : directions) {
            for (int j : directions) {
                if (i == 0 && j == 0) continue; // Skip the cell itself

                int newRow = row + i;
                int newCol = col + j;

                if (newRow >= 0 && newRow < rows && newCol >= 0 && newCol < cols) {
                    count += board[newRow][newCol];
                }
            }
        }

        return count;
    }
